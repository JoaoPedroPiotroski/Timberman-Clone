[gd_scene load_steps=6 format=2]

[ext_resource path="res://Log.gd" type="Script" id=1]
[ext_resource path="res://Assets/log.png" type="Texture" id=2]
[ext_resource path="res://Assets/stick.png" type="Texture" id=3]

[sub_resource type="Shader" id=1]
code = "// original wind shader from https://github.com/Maujoe/godot-simple-wind-shader-2d/tree/master/assets/maujoe.simple_wind_shader_2d
// original script modified by HungryProton so that the assets are moving differently : https://pastebin.com/VL3AfV8D
//
// speed - The speed of the wind movement.
// minStrength - The minimal strength of the wind movement.
// maxStrength - The maximal strength of the wind movement.
// strengthScale - Scalefactor for the wind strength.
// interval - The time between minimal and maximal strength changes.
// detail - The detail (number of waves) of the wind movement.
// distortion - The strength of geometry distortion.
// heightOffset - The height where the wind begins to move. By default 0.0.

shader_type canvas_item;
render_mode blend_mix;

// Wind settings.
uniform mediump float speed = 1.0;
uniform mediump float minStrength : hint_range(0.0, 1.0) = 0.05;
uniform mediump float maxStrength : hint_range(0.0, 1.0) = 0.01;
uniform mediump float strengthScale = 100.0;
uniform mediump float interval = 3.5;
uniform mediump float detail = 1.0;
uniform mediump float distortion : hint_range(0.0, 1.0);
uniform mediump float heightOffset : hint_range(0.0, 1.0);

// With the offset value, you can if you want different moves for each asset. Just put a random value (1, 2, 3) in the editor. Don't forget to mark the material as unique if you use this
uniform mediump float offset = 0; 


mediump float getWind(vec2 vertex, vec2 uv, mediump float time){
    mediump float diff = pow(maxStrength - minStrength, 2.0);
    mediump float strength = clamp(minStrength + diff + sin(time / interval) * diff, minStrength, maxStrength) * strengthScale;
    mediump float wind = (sin(time) + cos(time * detail)) * strength * max(0.0, (1.0-uv.y) - heightOffset);
    
    return wind; 
}

void vertex() {
    mediump vec4 pos = WORLD_MATRIX * vec4(0.0, 0.0, 0.0, 1.0);
    mediump float time = TIME * speed + offset;
    //mediump float time = TIME * speed + pos.x * pos.y  ; not working when moving...
    VERTEX.x += getWind(VERTEX.xy, UV, time);
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/speed = 3.0
shader_param/minStrength = 0.05
shader_param/maxStrength = 0.01
shader_param/strengthScale = 20.0
shader_param/interval = 3.5
shader_param/detail = 1.0
shader_param/distortion = 0.0
shader_param/heightOffset = 0.0
shader_param/offset = 0.0

[node name="Log" type="Sprite" groups=[
"Log",
]]
material = SubResource( 2 )
texture = ExtResource( 2 )
script = ExtResource( 1 )

[node name="right" type="Sprite" parent="."]
visible = false
use_parent_material = true
position = Vector2( 34, 1 )
texture = ExtResource( 3 )

[node name="left" type="Sprite" parent="."]
visible = false
use_parent_material = true
position = Vector2( -34, 1 )
texture = ExtResource( 3 )
flip_h = true
